package BlackRock;

import java.util.Random;

public class JosephusProblem {
	class Node{
		int val;
		Node next;
		public Node(int val){
			this.val = val;
		}
	}
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		solveProblem(7,3);
	}
	private static void solveProblem(int n, int k) {
		// TODO Auto-generated method stub
		JosephusProblem joe = new JosephusProblem();
		Node root = joe.new Node(1);
		Node curr = root;
		for(int i = 2;i<=n;i++){
			curr.next = joe.new Node(i);
			curr = curr.next;
		}
		curr.next = root;
		Random rand =  new Random();
		int startPoint = 1+rand.nextInt(7);
		curr = root;
		while(curr.val != startPoint)
			curr = curr.next;
		System.out.println("StartingPoint: "+curr.val);
		recursiveKill(curr,k);
	}
	private static void recursiveKill(Node curr, int k) {
		// TODO Auto-generated method stub
		if(curr.next == curr){
			System.out.println("Winner: "+curr.val);
			return;
		}
		for(int i=1;i<k;i++)
			curr = curr.next;
		System.out.println("Killed Node: "+curr.next.val);
		curr.next = curr.next.next;
		
	}

}
